{"version":3,"sources":["data.js","components/EditFriend.js","components/FriendBox.js","components/DiagramBody.js","components/TableBody.js","components/HeaderMenu.js","components/AddFriend.js","components/InputExportBody.js","App.js","index.js"],"names":["calcChildProfit","friend","profit","children","length","forEach","child","sales","_price","_childPercent","Math","round","getCoords","coords","x","y","Array","isArray","map","i","parseInt","split","storage","getAll","a","nextData","localforage","iterate","value","key","then","Object","keys","update","item","getItem","toString","oldItem","setItem","move","oldCoords","newCoords","removeItem","add","delete","includes","undefined","filter","replaceAll","items","clear","Promise","all","entries","EditFriend","friendValues","name","submit","formik","useFormik","initialValues","onSubmit","values","onReset","Layer","onEsc","handleReset","onClickOutside","onChange","handleChange","handleSubmit","Box","justify","Text","textAlign","margin","TextInput","placeholder","autoFocus","type","direction","Button","label","onClick","window","confirm","primary","FriendWrapper","styled","attrs","background","pad","responsive","EmptyWrapper","props","isHovering","stage","EditButton","title","friendType","PropTypes","shape","string","isRequired","number","arrayOf","FriendBox","onEmptyClick","onFriendClick","onDrop","id","useState","setIsHovering","isDragging","setIsDragging","isEdit","setIsEdit","useEffect","childProfit","lines","index","xDiff","yDiff","points","from","max","_","arr","join","style","position","zIndex","overflow","markerWidth","markerHeight","orient","refY","d","markerMid","stroke","Stack","anchor","maxWidth","onDragEnd","onDragStart","e","dataTransfer","setData","target","draggable","data-for","data-tip","effect","delayHide","clickable","onDragOver","preventDefault","onDragLeave","Wrapper","DiagramBody","setNextFriend","setStage","data","force","console","log","gridLayout","_maxY","_maxX","flat","onScroll","scrollTop","scrollLeft","Grid","rows","columns","parentCoords","getData","fromX","fromY","toX","toY","hasParent","find","s","TableBody","updateField","useCallback","field","Number","saveField","tableData","salesProfit","totalProfit","DataTable","property","header","render","datum","onBlur","Meter","thickness","size","vertical","primaryKey","sortable","align","wrap","HeaderMenu","nextFriend","AddFriend","oldValues","InputExportBody","inputRef","useRef","exportCSV","csvContent","f","blob","Blob","saveAs","Date","now","exportJSON","jsonContent","JSON","stringify","importJSON","checkValue","allData","isNaN","every","maybeChild","files","reader","FileReader","onload","res","parse","result","pushData","readAsText","current","click","ref","accept","display","GlobalStyle","createGlobalStyle","App","Grommet","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31328826.chunk.js","sourcesContent":["import localforage from 'localforage'\n\nimport { _childPercent, _price } from './config.json'\n\nexport const calcChildProfit = (friend) => {\n  let profit = 0\n  if (friend.children?.length) {\n    friend.children.forEach((child) => {\n      profit += (calcChildProfit(child) + child.sales * _price) * _childPercent\n    })\n  }\n  return Math.round(profit)\n}\n\nconst getCoords = (coords) => {\n  let x, y\n  if (Array.isArray(coords)) {\n    ;[x, y] = coords.map((i) => parseInt(i))\n  } else if (typeof coords === 'string') {\n    ;[x, y] = coords.split(',').map((i) => parseInt(i))\n  } else {\n    ;({ x, y } = coords)\n  }\n  return [x, y]\n}\n\nconst storage = {\n  getAll: async () => {\n    const nextData = {}\n    await localforage\n      .iterate((value, key) => {\n        nextData[key] = value\n      })\n      .then(() => {\n        Object.keys(nextData).forEach((key) => {\n          nextData[key].children =\n            nextData[key].children?.map((coords) => nextData[coords]) ?? []\n        })\n      })\n    return nextData\n  },\n\n  update: (coords, item) =>\n    localforage\n      .getItem(getCoords(coords).toString())\n      .then((oldItem) =>\n        localforage.setItem(\n          getCoords(coords).toString(),\n          typeof item === 'function' ? item(oldItem) : { ...oldItem, ...item }\n        )\n      ),\n\n  move: (oldCoords, newCoords) =>\n    localforage\n      .getItem(getCoords(oldCoords).toString())\n      .then((oldItem) =>\n        localforage.setItem(getCoords(newCoords).toString(), {\n          ...oldItem,\n          x: getCoords(newCoords)[0],\n          y: getCoords(newCoords)[1],\n        })\n      )\n      .then(() => localforage.removeItem(getCoords(oldCoords).toString())),\n\n  add: (coords, item) =>\n    localforage.setItem(getCoords(coords).toString(), {\n      ...item,\n      x: getCoords(coords)[0],\n      y: getCoords(coords)[1],\n    }),\n\n  delete: (coords) =>\n    localforage\n      .removeItem(getCoords(coords).toString())\n      .then(() =>\n        localforage.iterate((value, key) =>\n          value.children?.includes(getCoords(coords).toString())\n            ? { key, value }\n            : undefined\n        )\n      )\n      .then(({ key, value }) =>\n        localforage.setItem(key, {\n          ...value,\n          children: value.children.filter(\n            (child) => child !== getCoords(coords).toString()\n          ),\n        })\n      ),\n\n  replaceAll: (items) =>\n    localforage\n      .clear()\n      .then(() =>\n        Promise.all(\n          Object.entries(items || {}).map(([key, value]) =>\n            localforage.setItem(key, value)\n          )\n        )\n      ),\n}\n\nexport default storage\n","import React from 'react'\nimport { Box, Button, Layer, Text, TextInput } from 'grommet'\nimport { useFormik } from 'formik'\nimport PropTypes from 'prop-types'\n\nimport storage from '../data'\n\nconst EditFriend = ({ friendValues: { x, y, name, sales }, submit }) => {\n  const formik = useFormik({\n    initialValues: { name, sales },\n    onSubmit: async (values) => {\n      await storage.update([x, y], values)\n      submit()\n    },\n    onReset: submit,\n  })\n\n  return (\n    <Layer onEsc={formik.handleReset} onClickOutside={formik.handleReset}>\n      <form\n        onChange={formik.handleChange}\n        onSubmit={formik.handleSubmit}\n        onReset={formik.handleReset}\n      >\n        <Box justify={'center'}>\n          <Text textAlign={'center'} margin={'small'}>\n            Edit Friend\n          </Text>\n\n          <Box margin={'xsmall'}>\n            <TextInput\n              placeholder={'Name'}\n              name={'name'}\n              value={formik.values.name}\n              autoFocus\n            />\n          </Box>\n\n          <Box margin={'xsmall'}>\n            <TextInput\n              placeholder={'Sales'}\n              name={'sales'}\n              value={formik.values.sales}\n              type={'number'}\n            />\n          </Box>\n\n          <Box direction={'row'} justify={'center'}>\n            <Button label={'Cancel'} type={'reset'} margin={'small'} />\n            <Button\n              label={'Delete'}\n              onClick={() =>\n                window.confirm('Are you sure you want to delete this friend?')\n                  ? storage.delete([x, y]).then(submit)\n                  : null\n              }\n              margin={'small'}\n            />\n            <Button label={'Submit'} type={'submit'} margin={'small'} primary />\n          </Box>\n        </Box>\n      </form>\n    </Layer>\n  )\n}\n\nEditFriend.propTypes = {\n  submit: PropTypes.func.isRequired,\n  friendValues: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    sales: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n}\n\nexport default EditFriend\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Box, Button, Stack } from 'grommet'\nimport ReactTooltip from 'react-tooltip'\n\nimport EditFriend from './EditFriend'\nimport { calcChildProfit } from '../data'\nimport { _price } from '../config.json'\n\nconst FriendWrapper = styled(Box).attrs({\n  background: 'lightblue',\n  pad: 'xsmall',\n  responsive: false,\n})`\n  border-radius: 4px;\n  user-select: none;\n  overflow-wrap: break-word;\n  text-align: center;\n`\n\nconst EmptyWrapper = styled(Box).attrs((props) => ({\n  background: props.isHovering ? 'black' : 'lightgray',\n  margin: props.isHovering ? 'small' : 'medium',\n  responsive: false,\n  round: 'full',\n}))`\n  opacity: 0.5;\n  border: ${(props) => (props.stage === 'select' ? '1px dashed black' : null)};\n\n  :hover {\n    border-style: ${(props) => (props.stage === 'select' ? 'solid' : null)};\n  }\n`\n\nconst EditButton = styled(Button).attrs({ title: 'edit' })`\n  background: white url(${'/create-24px.svg'}) no-repeat center;\n  height: 36px;\n  width: 24px;\n  float: right;\n`\n\nconst FriendBox = ({\n  friend,\n  stage,\n  onEmptyClick,\n  onFriendClick,\n  onDrop,\n  id,\n  update,\n}) => {\n  const [isHovering, setIsHovering] = useState(false)\n  const [isDragging, setIsDragging] = useState(false)\n  const [isEdit, setIsEdit] = useState(false)\n\n  useEffect(() => {\n    setIsHovering(false)\n  }, [friend])\n\n  if (friend) {\n    const profit = friend.sales * _price\n    const childProfit = calcChildProfit(friend)\n\n    const lines = friend.children?.map((child, index) => {\n      const xDiff = child.x - friend.x\n      const yDiff = child.y - friend.y\n      const points = Array.from(\n        Array(Math.max(Math.round((xDiff ** 2 + yDiff ** 2) ** 0.5), 3)),\n        () => null\n      )\n        .map((_, i, arr) => [\n          (xDiff / (arr.length - 1)) * i * 100,\n          (yDiff / (arr.length - 1)) * i * 100,\n        ])\n        .join(' ')\n\n      return (\n        <svg\n          style={{ position: 'absolute', zIndex: -1, overflow: 'visible' }}\n          key={index}\n        >\n          <defs>\n            <marker\n              id={'t'}\n              markerWidth={'8'}\n              markerHeight={'8'}\n              orient={'auto'}\n              refY={'4'}\n            >\n              <path d={'M0,0 L8,4 0,8'} />\n            </marker>\n          </defs>\n\n          <polyline markerMid={'url(#t)'} points={points} stroke={'black'} />\n        </svg>\n      )\n    })\n\n    return (\n      <>\n        <Stack anchor={'center'} margin={'auto'} style={{ maxWidth: '100%' }}>\n          {lines}\n          <FriendWrapper\n            onClick={onFriendClick}\n            onDragEnd={() => setIsDragging(false)}\n            onDragStart={(e) => {\n              setIsDragging(true)\n              e.dataTransfer.setData('text', e.target.id)\n            }}\n            draggable={stage !== 'select'}\n            data-for={`tooltip-${id}`}\n            data-tip\n            id={id}\n          >\n            {friend.name}\n          </FriendWrapper>\n        </Stack>\n\n        {!isDragging && stage !== 'select' && !isEdit ? (\n          <ReactTooltip\n            id={`tooltip-${id}`}\n            effect={'solid'}\n            delayHide={200}\n            clickable\n          >\n            <EditButton onClick={() => setIsEdit(true)} />\n            <div>\n              <div>Name: {friend.name}</div>\n              <div>Sales: {friend.sales}</div>\n              <div>Sales profit: ${profit}</div>\n              <div>Children's sales profit: ${childProfit}</div>\n              <div>Total profit: ${profit + childProfit}</div>\n            </div>\n          </ReactTooltip>\n        ) : null}\n\n        {isEdit ? (\n          <EditFriend\n            friendValues={friend}\n            submit={() => {\n              setIsEdit(false)\n              update()\n            }}\n          />\n        ) : null}\n      </>\n    )\n  } else\n    return (\n      <EmptyWrapper\n        onClick={onEmptyClick}\n        stage={stage}\n        isHovering={isHovering}\n        onDragOver={(e) => {\n          setIsHovering(true)\n          e.preventDefault()\n        }}\n        onDragLeave={() => setIsHovering(false)}\n        onDrop={onDrop}\n        id={id}\n      />\n    )\n}\n\nconst friendType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  sales: PropTypes.number.isRequired,\n})\nfriendType.children = PropTypes.arrayOf(friendType.isRequired)\n\nFriendBox.propTypes = {\n  friend: friendType,\n  stage: PropTypes.oneOf(['normal', 'select', 'input']).isRequired,\n  onEmptyClick: PropTypes.func,\n  onFriendClick: PropTypes.func,\n  onDrop: PropTypes.func,\n  id: PropTypes.string.isRequired,\n  update: PropTypes.func.isRequired,\n}\n\nexport default FriendBox\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Grid, Box } from 'grommet'\nimport PropTypes from 'prop-types'\n\nimport FriendBox from './FriendBox'\nimport storage from '../data'\nimport { _maxX, _maxY } from '../config.json'\n\nconst Wrapper = styled(Box)`\n  max-width: 100%;\n  max-height: 100%;\n  overflow: scroll;\n`\n\nconst DiagramBody = ({ stage, setNextFriend, setStage }) => {\n  const [data, setData] = useState({})\n  const [update, force] = useState(null)\n\n  useEffect(() => {\n    if (stage === 'normal' || stage === 'select') storage.getAll().then(setData)\n  }, [stage, update])\n\n  console.log(data)\n\n  const gridLayout = Array.from(Array(_maxY), (_, y) =>\n    Array.from(Array(_maxX), (_, x) => [x, y])\n  ).flat()\n\n  return (\n    <Wrapper\n      onScroll={(e) => console.log(e.target.scrollTop, e.target.scrollLeft)}\n    >\n      <Grid\n        rows={Array.from(Array(_maxY), () => '100px')}\n        columns={Array.from(Array(_maxX), () => '100px')}\n      >\n        {gridLayout.map((item) => (\n          <FriendBox\n            friend={data[item]}\n            onEmptyClick={\n              stage === 'select'\n                ? () => {\n                    setNextFriend((friend) => ({\n                      ...friend,\n                      coords: item.toString(),\n                    }))\n                    setStage('input')\n                  }\n                : null\n            }\n            onFriendClick={() => {\n              if (stage === 'normal') {\n                setNextFriend((friend) => ({\n                  ...friend,\n                  parentCoords: item.toString(),\n                }))\n                setStage('select')\n              }\n            }}\n            onDrop={async (e) => {\n              const [fromX, fromY] = e.dataTransfer\n                .getData('text')\n                .split(',')\n                .map((i) => parseInt(i))\n              const [toX, toY] = e.target.id.split(',').map((i) => parseInt(i))\n              console.log('dragging from:', fromX, fromY, 'into:', toX, toY)\n\n              if ((fromX !== toX || fromY !== toY) && !data[[toX, toY]]) {\n                await storage.move([fromX, fromY], [toX, toY])\n\n                const hasParent = Object.values(data).find((item) =>\n                  item.children.find(\n                    (child) => child.x === fromX && child.y === fromY\n                  )\n                )\n                if (hasParent)\n                  await storage.update(\n                    hasParent,\n                    ({ children, ...oldItem }) => ({\n                      ...oldItem,\n                      children: [\n                        ...children.filter(\n                          (key) => key !== [fromX, fromY].toString()\n                        ),\n                        [toX, toY].toString(),\n                      ],\n                    })\n                  )\n\n                force((s) => !s)\n              }\n            }}\n            update={() => force((s) => !s)}\n            id={item.toString()}\n            stage={stage}\n            key={data[item] ? `${item}-${data[item].children}` : item}\n          />\n        ))}\n      </Grid>\n    </Wrapper>\n  )\n}\n\nDiagramBody.propTypes = {\n  stage: PropTypes.oneOf(['normal', 'select', 'input', 'table']).isRequired,\n  setNextFriend: PropTypes.func.isRequired,\n  setStage: PropTypes.func.isRequired,\n}\n\nexport default DiagramBody\n","import React, { useCallback, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Box, DataTable, Meter, TextInput } from 'grommet'\nimport ReactTooltip from 'react-tooltip'\nimport PropTypes from 'prop-types'\n\nimport storage, { calcChildProfit } from '../data'\nimport { _price } from '../config.json'\n\nconst Wrapper = styled(Box)`\n  max-width: 100%;\n  max-height: 100%;\n  overflow: scroll;\n`\n\nconst TableBody = ({ stage }) => {\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    if (stage === 'table') storage.getAll().then(setData)\n  }, [stage])\n\n  console.log(data)\n\n  const updateField = useCallback(\n    ({ target: { name, value } }) => {\n      const [key, field] = name.split('.')\n      value = field === 'sales' ? Number(value) : value\n      setData({ ...data, [key]: { ...data[key], [field]: value } })\n    },\n    [data]\n  )\n\n  const saveField = useCallback(async ({ target: { name, value } }) => {\n    const [key, field] = name.split('.')\n    value = field === 'sales' ? Number(value) : value\n    await storage.update(key, { [field]: value })\n  }, [])\n\n  const tableData = Object.entries(data).map(([key, value]) => ({\n    ...value,\n    salesProfit: value.sales * _price,\n    childProfit: calcChildProfit(value),\n    totalProfit: value.sales * _price + calcChildProfit(value),\n    key,\n  }))\n\n  return (\n    <Wrapper>\n      <DataTable\n        columns={[\n          {\n            property: 'name',\n            header: 'Name',\n            render: (datum) =>\n              stage === 'tableEdit' ? (\n                <TextInput\n                  value={data[datum.key].name}\n                  name={`${datum.key}.name`}\n                  onChange={updateField}\n                  onBlur={saveField}\n                />\n              ) : (\n                datum.name\n              ),\n          },\n          {\n            property: 'sales',\n            header: 'Sales',\n            render: (datum) =>\n              stage === 'tableEdit' ? (\n                <TextInput\n                  value={data[datum.key].sales}\n                  name={`${datum.key}.sales`}\n                  onChange={updateField}\n                  onBlur={saveField}\n                />\n              ) : (\n                <>\n                  <Box data-tip={datum.sales + ' sales'}>\n                    <Meter\n                      values={[{ value: datum.sales }]}\n                      max={Math.max(\n                        ...Object.values(data).map((item) => item.sales)\n                      )}\n                      thickness={'small'}\n                      size={'small'}\n                      margin={{ vertical: 'small' }}\n                    />\n                  </Box>\n                  <ReactTooltip effect={'solid'} />\n                </>\n              ),\n          },\n          {\n            property: 'salesProfit',\n            header: 'Sales profit',\n            render: (datum) => '$' + datum.salesProfit,\n          },\n          {\n            property: 'childProfit',\n            header: \"Children's sales profit\",\n            render: (datum) => '$' + datum.childProfit,\n          },\n          {\n            property: 'totalProfit',\n            header: 'Total profit',\n            render: (datum) => '$' + datum.totalProfit,\n          },\n        ]}\n        data={tableData}\n        primaryKey={'key'}\n        sortable\n      />\n    </Wrapper>\n  )\n}\n\nTableBody.propTypes = {\n  stage: PropTypes.oneOf(['table', 'tableEdit']).isRequired,\n}\n\nexport default TableBody\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Box, Button, Text } from 'grommet'\n\nconst Wrapper = styled(Box).attrs({\n  direction: 'row',\n  background: 'beige',\n  align: 'center',\n  pad: 'small',\n  responsive: false,\n  wrap: true,\n})`\n  flex-shrink: 0;\n  width: 100vw;\n`\n\nconst HeaderMenu = ({ stage, setStage, nextFriend }) => {\n  return (\n    <Wrapper>\n      {stage === 'select' ? (\n        <Text margin={'small'}>\n          Please select coordinates for\n          {nextFriend?.parentCoords ? ' child' : ' friend'}\n        </Text>\n      ) : null}\n\n      {stage !== 'tableEdit' ? (\n        <Button\n          label={stage === 'select' ? 'Cancel' : 'Add Friend'}\n          onClick={() => setStage(stage === 'select' ? 'normal' : 'select')}\n          margin={'small'}\n        />\n      ) : null}\n\n      {stage !== 'select' && stage !== 'tableEdit' ? (\n        <Button\n          label={\n            'Switch to ' +\n            (stage.includes('table') ? 'Diagram' : 'Table') +\n            ' View'\n          }\n          onClick={() => setStage(stage.includes('table') ? 'normal' : 'table')}\n          margin={'small'}\n        />\n      ) : null}\n\n      {stage.includes('table') ? (\n        <Button\n          label={stage === 'tableEdit' ? 'Done' : 'Edit Table'}\n          onClick={() =>\n            setStage(stage === 'tableEdit' ? 'table' : 'tableEdit')\n          }\n          margin={'small'}\n        />\n      ) : null}\n\n      {stage !== 'select' ? (\n        <Button\n          label={stage === 'rawInput' ? 'Back to Diagram View' : 'Input/Export'}\n          onClick={() => setStage(stage === 'rawInput' ? 'normal' : 'rawInput')}\n          margin={'small'}\n        />\n      ) : null}\n    </Wrapper>\n  )\n}\n\nHeaderMenu.propTypes = {\n  stage: PropTypes.oneOf([\n    'normal',\n    'select',\n    'input',\n    'table',\n    'tableEdit',\n    'rawInput',\n  ]).isRequired,\n  setStage: PropTypes.func.isRequired,\n  nextFriend: PropTypes.shape({\n    parentCoords: PropTypes.string,\n  }),\n}\n\nexport default HeaderMenu\n","import React from 'react'\nimport { Box, Button, Layer, Text, TextInput } from 'grommet'\nimport { useFormik } from 'formik'\nimport PropTypes from 'prop-types'\n\nimport storage from '../data'\n\nconst AddFriend = ({ setStage, nextFriend: { coords, parentCoords } }) => {\n  const formik = useFormik({\n    initialValues: { name: '', sales: '' },\n    onSubmit: async (values) => {\n      if (parentCoords) {\n        await storage.update(parentCoords, ({ children, ...oldValues }) => ({\n          ...oldValues,\n          children: [...(children || []), coords],\n        }))\n      }\n      await storage.add(coords, values)\n      setStage('normal')\n    },\n    onReset: () => setStage('normal'),\n  })\n\n  return (\n    <Layer onEsc={formik.handleReset} onClickOutside={formik.handleReset}>\n      <form\n        onChange={formik.handleChange}\n        onSubmit={formik.handleSubmit}\n        onReset={formik.handleReset}\n      >\n        <Box justify={'center'}>\n          <Text textAlign={'center'} margin={'small'}>\n            Please input friend's values:\n          </Text>\n\n          <Box margin={'xsmall'}>\n            <TextInput placeholder={'Name'} name={'name'} autoFocus />\n          </Box>\n\n          <Box margin={'xsmall'}>\n            <TextInput placeholder={'Sales'} name={'sales'} type={'number'} />\n          </Box>\n\n          <Box direction={'row'} justify={'center'}>\n            <Button label={'Cancel'} type={'reset'} margin={'small'} />\n            <Button label={'Submit'} type={'submit'} margin={'small'} />\n          </Box>\n        </Box>\n      </form>\n    </Layer>\n  )\n}\n\nAddFriend.propTypes = {\n  setStage: PropTypes.func.isRequired,\n  nextFriend: PropTypes.shape({\n    coords: PropTypes.string.isRequired,\n    parentCoords: PropTypes.string,\n  }),\n}\n\nexport default AddFriend\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Box, Button } from 'grommet'\nimport { saveAs } from 'file-saver'\nimport PropTypes from 'prop-types'\n\nimport storage, { calcChildProfit } from '../data'\nimport { _price, _maxY, _maxX } from '../config.json'\n\nconst Wrapper = styled(Box).attrs({\n  pad: 'medium',\n  justify: 'center',\n  align: 'center',\n  responsive: false,\n})`\n  max-width: 100%;\n  max-height: 100%;\n  overflow: scroll;\n`\n\nconst InputExportBody = ({ setStage }) => {\n  const inputRef = useRef()\n\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    storage.getAll().then(setData)\n  }, [])\n\n  const exportCSV = useCallback(() => {\n    const rows = [\n      [\n        'Name',\n        'Sales',\n        'Sales profit',\n        \"Children's sales profit\",\n        'Total profit',\n      ],\n      ...Object.values(data).map(({ name, sales, children }) => [\n        name,\n        sales,\n        sales * _price,\n        calcChildProfit({ children }),\n        sales * _price + calcChildProfit({ children }),\n      ]),\n    ]\n\n    const csvContent = rows\n      .map((e) => e.map((f) => `\"${f}\"`).join(','))\n      .join('\\n')\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8' })\n    saveAs(blob, `friends_data_${Math.round(Date.now() / 1000)}.csv`)\n  }, [data])\n\n  const exportJSON = useCallback(() => {\n    const jsonContent = JSON.stringify(Object.values(data), null, 2)\n    const blob = new Blob([jsonContent], {\n      type: 'application/json;charset=utf-8',\n    })\n    saveAs(blob, `friends_data_${Math.round(Date.now() / 1000)}.json`)\n  }, [data])\n\n  const importJSON = useCallback(\n    (e) => {\n      const checkValue = (value, _, allData) =>\n        value instanceof Object &&\n        value.x < _maxX &&\n        value.y < _maxY &&\n        !isNaN(value.sales) &&\n        value.name &&\n        typeof value.name === 'string' &&\n        Array.isArray(value.children) &&\n        value.children.every(\n          (child) =>\n            (typeof child === 'string' &&\n              allData.find(\n                (maybeChild) =>\n                  child === `${maybeChild?.x},${maybeChild?.y}` &&\n                  checkValue(maybeChild, null, allData)\n              )) ||\n            checkValue(child)\n        )\n\n      if (e.target.files[0]) {\n        const reader = new FileReader()\n        reader.onload = () => {\n          try {\n            let res = JSON.parse(reader.result || '')\n\n            if (!Array.isArray(res)) res = Object.values(res)\n\n            if (res.every(checkValue)) {\n              const nextData = {}\n              const pushData = ({ name, sales, x, y, children }) => {\n                nextData[[x, y]] = {\n                  name,\n                  x,\n                  y,\n                  sales: Number(sales),\n                  children: children.map((child) =>\n                    typeof child === 'string' ? child : pushData(child)\n                  ),\n                }\n                return [x, y].toString()\n              }\n\n              res.forEach(pushData)\n\n              if (\n                window.confirm(\n                  `Are you sure you want to load new values? This will delete everything and insert ${\n                    Object.keys(nextData).length\n                  } value(s).`\n                )\n              )\n                storage.replaceAll(nextData).then(() => setStage('normal'))\n            } else console.log('ERROR: BAD VALUES')\n          } catch (e) {\n            console.log('ERROR: PARSING')\n            console.log(e)\n          }\n        }\n        reader.readAsText(e.target.files[0])\n      }\n    },\n    [setStage]\n  )\n\n  return (\n    <Wrapper>\n      <Button label={'Export CSV'} onClick={exportCSV} margin={'small'} />\n\n      <Box direction={'row'}>\n        <Button label={'Export JSON'} onClick={exportJSON} margin={'small'} />\n\n        <Button\n          label={'Input JSON'}\n          onClick={() => inputRef.current?.click()}\n          margin={'small'}\n        />\n        <input\n          type={'file'}\n          ref={inputRef}\n          accept={'application/json'}\n          onChange={importJSON}\n          style={{ display: 'none' }}\n        />\n      </Box>\n    </Wrapper>\n  )\n}\n\nInputExportBody.propTypes = {\n  setStage: PropTypes.func.isRequired,\n}\n\nexport default InputExportBody\n","import React, { useEffect, useState } from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport { Grommet, Box } from 'grommet'\n\nimport DiagramBody from './components/DiagramBody'\nimport TableBody from './components/TableBody'\nimport HeaderMenu from './components/HeaderMenu'\nimport AddFriend from './components/AddFriend'\nimport InputExportBody from './components/InputExportBody'\n\nconst Wrapper = styled(Box)`\n  max-width: 100vw;\n  max-height: 100vh;\n`\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n  }\n`\n\nconst App = () => {\n  const [stage, setStage] = useState('normal')\n  const [nextFriend, setNextFriend] = useState(null)\n\n  useEffect(() => {\n    if (stage === 'normal') setNextFriend(null)\n  }, [stage])\n\n  return (\n    <Grommet>\n      <GlobalStyle />\n      <Wrapper>\n        <HeaderMenu stage={stage} setStage={setStage} nextFriend={nextFriend} />\n\n        {stage.includes('table') ? <TableBody stage={stage} /> : null}\n\n        {stage === 'rawInput' ? <InputExportBody setStage={setStage} /> : null}\n\n        {!stage.includes('table') && stage !== 'rawInput' ? (\n          <DiagramBody\n            stage={stage}\n            setStage={setStage}\n            setNextFriend={setNextFriend}\n          />\n        ) : null}\n\n        {stage === 'input' ? (\n          <AddFriend\n            setStage={setStage}\n            nextFriend={nextFriend}\n            setNextFriend={setNextFriend}\n          />\n        ) : null}\n      </Wrapper>\n    </Grommet>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}