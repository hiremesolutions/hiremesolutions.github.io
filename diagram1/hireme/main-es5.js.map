{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dialog/dialog.component.ts","webpack:///src/app/components/dialog/dialog.component.html","webpack:///src/app/components/friend/friend.component.ts","webpack:///src/app/components/friend/friend.component.html","webpack:///src/app/components/index/index.component.ts","webpack:///src/app/components/index/index.component.html","webpack:///src/app/components/line/line.component.ts","webpack:///src/app/components/line/line.component.html","webpack:///src/app/services/files.service.ts","webpack:///src/app/services/friends.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","angularMaterialModules","AppModule","declarations","providers","bootstrap","entryComponents","DialogComponent","dialogRef","data","fb","form","group","Math","floor","random","initialX","initialY","lineX","lineY","totalFromSales","totalFromCommission","totalFromSalesPlusComission","name","required","ticketsSold","pattern","children","close","value","FriendComponent","friend","idEmitter","element","source","getRootElement","newPos","getBoundingClientRect","x","y","emit","showOverlay","IndexComponent","dialog","friendsService","filesService","items","selectedId","ticketPrice","init","flattenedItems","open","width","offsetX","offsetY","afterClosed","subscribe","fatherId","color","makeRandomColor","update","add","closeOverlay","exportToCSV","LineComponent","_x1","_y1","_x2","_y2","cord","FilesService","transformedData","map","length","i","push","totalSales","totalFromSalesPlusCommission","join","options","headers","providedIn","FriendsService","initialState","commissionRate","flattenArray","index","findIndex","calculateCommission","child","commission","father","moneyFromChild","nextId","array","result","forEach","Array","isArray","concat","toString","substr","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE,MAAvB;AAA+BC,gBAAU,EAAE;AAA3C,KADqB,EAErB;AAAEF,UAAI,EAAE,OAAR;AAAiBG,eAAS,EAAE;AAA5B,KAFqB,CAAvB;;QASaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACd7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaU,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,QAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAkBA,QAAMC,sBAAsB,GAAG,CAC7B,qEAD6B,EAE7B,wEAF6B,EAG7B,oEAH6B,EAI7B,wEAJ6B,EAK7B,uEAL6B,CAA/B;;QA6BaC,S;;;;;YAAAA,S;AAAS,kBAHR,2DAGQ;;;;yBAATA,S;AAAS,O;AAAA,iBAJT,E;AAAE,gBATJ,CACP,6DADO,EAEP,uEAFO,EAGP,oEAHO,EAIP,4FAJO,EAKP,2DALO,EAMP,mEANO,EAOPD,sBAPO,CASI;;;;0HAIFC,S,EAAS;AAAA,uBAnBlB,2DAmBkB,EAlBlB,gFAkBkB,EAjBlB,oFAiBkB,EAhBlB,oFAgBkB,EAflB,8EAekB;AAfL,kBAGb,6DAHa,EAIb,uEAJa,EAKb,oEALa,EAMb,4FANa,EAOb,2DAPa,EAQb,mEARa,EAbf,qEAae,EAZf,wEAYe,EAXf,oEAWe,EAVf,wEAUe,EATf,uEASe;AAeK,O;AAxBN,K;;;;;sEAwBHA,S,EAAS;cArBrB,sDAqBqB;eArBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,gFAFY,EAGZ,oFAHY,EAIZ,oFAJY,EAKZ,8EALY,CADN;AAQRR,iBAAO,EAAE,CACP,6DADO,EAEP,uEAFO,EAGP,oEAHO,EAIP,4FAJO,EAKP,2DALO,EAMP,mEANO,EAOPM,sBAPO,CARD;AAiBRG,mBAAS,EAAE,EAjBH;AAkBRC,mBAAS,EAAE,CAAC,2DAAD,CAlBH;AAmBRC,yBAAe,EAAE,CAAC,oFAAD,EAAkB,oFAAlB;AAnBT,S;AAqBY,Q;;;;;;;;;;;;;;;;;;AC/CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,e;AAIX,+BACSC,SADT,EAEkCC,IAFlC,EAGmBC,EAHnB,EAGkC;AAAA;;AAFzB,aAAAF,SAAA,GAAAA,SAAA;AACyB,aAAAC,IAAA,GAAAA,IAAA;AACf,aAAAC,EAAA,GAAAA,EAAA;AAEjB,aAAKC,IAAL,GAAY,KAAKD,EAAL,CAAQE,KAAR,CAAc;AACxBzB,YAAE,EAAE0B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,QAAQ,CAAzB,IAA8B,CAAzC,CADoB;AAExBC,kBAAQ,EAAEP,IAAI,CAACO,QAFS;AAGxBC,kBAAQ,EAAER,IAAI,CAACQ,QAHS;AAIxBC,eAAK,EAAET,IAAI,CAACO,QAJY;AAKxBG,eAAK,EAAEV,IAAI,CAACQ,QALY;AAMxBG,wBAAc,EAAE,CANQ;AAOxBC,6BAAmB,EAAE,CAPG;AAQxBC,qCAA2B,EAAE,CARL;AASxBC,cAAI,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CATkB;AAUxBC,qBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,EAAsB,0DAAWE,OAAX,CAAmB,QAAnB,CAAtB,CAAL,CAVW;AAWxBC,kBAAQ,EAAE,CAAC,EAAD;AAXc,SAAd,CAAZ;AAaD;;;;mCAEO,CACP;;;oCAEU;AACT,eAAKnB,SAAL,CAAeoB,KAAf,CAAqB,KAAKjB,IAAL,CAAUkB,KAA/B;AACD;;;;;;;uBA7BUtB,e,EAAe,sI,EAAA,gEAMhB,wEANgB,C,EAMD,2H;AAAA,K;;;YANdA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,yV;AAAA;AAAA;ACT5B;;AACI;;AACI;;AACI;;AAAW;;AAAa;;AACxB;;AACJ;;AACA;;AACI;;AAAW;;AAAY;;AACvB;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAGA;AAAA,mBAAS,iBAAT;AAAmB,WAAnB;;AAAqB;;AAAG;;AAC5B;;;;AAhBU;;AAAA;;AAaN;;AAAA;;;;;;;;;sEDLSA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTT,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;kBAMvB,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;AEfZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcQ;;AACI;;AAGJ;;;;;;;;AAHc;;AAAA,4FAAmB,IAAnB,EAAmB,mBAAnB,EAAmB,IAAnB,EAAmB,cAAnB,EAAmB,IAAnB,EAAmB,cAAnB,EAAmB,OAAnB,EAAmB,mBAAnB;;;;;;AAFlB;;AACI;;AAKJ;;;;;;AALgC;;AAAA;;;;;;;;AAdpC;;AACI;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAEpD;;AAAM;AAAA;;AAAA;;AAAA;AAAA;;AAA0C;;AAAG;;AACnD;;AACI;;AAAG;;AAAM;;AAAM;;AAAO;;AAAe;;AACrC;;AAAG;;AAAM;;AAAc;;AAAO;;AAAsB;;AACpD;;AAAG;;AAAM;;AAAa;;AAAO;;AAAyB;;AACtD;;AAAG;;AAAM;;AAAkB;;AAAO;;AAA8B;;AAChE;;AAAG;;AAAM;;AAA0B;;AAAO;;AAAsC;;AACpF;;AACJ;;AAEA;;AAOJ;;;;;;AAlBQ;;AAAA,wGAAiC,KAAjC,EAAiC,4BAAjC,EAAiC,IAAjC;;AAG0B;;AAAA;;AACQ;;AAAA;;AACD;;AAAA;;AACK;;AAAA;;AACQ;;AAAA;;AAIpC;;AAAA;;;;QDJL8B,e;AAIX,iCAAc;AAAA;;AAHL,aAAAC,MAAA,GAAiB,IAAjB;AACC,aAAAC,SAAA,GAAY,IAAI,0DAAJ,EAAZ;AAEO;;;;mCAENnD,C,EAAgB;AACzB,cAAMoD,OAAO,GAAGpD,CAAC,CAACqD,MAAF,CAASC,cAAT,EAAhB;AACA,cAAMC,MAAM,GAAGH,OAAO,CAACI,qBAAR,EAAf;AACA,eAAKN,MAAL,CAAYb,KAAZ,GAAoBkB,MAAM,CAACE,CAA3B;AACA,eAAKP,MAAL,CAAYZ,KAAZ,GAAoBiB,MAAM,CAACG,CAA3B;AACD;;;iCAEQ;AACP,eAAKP,SAAL,CAAeQ,IAAf,CAAoB;AAAErD,cAAE,EAAE,KAAK4C,MAAL,CAAY5C,EAAlB;AAAsBsD,uBAAW,EAAE;AAAnC,WAApB;AACD;;;;;;;uBAfUX,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,yU;AAAA;AAAA;ACT5B;;;;AAAK;;;;;;;;;sEDSQA,e,EAAe;cAL3B,uDAK2B;eALjB;AACThC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;gBACzB;;;gBACA;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEI;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AACrC;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AACzB;;AACJ;;AACA;;AAAI;;AAAqC;;AAC7C;;;;;;;;AASI;;AAAuD;AAAA;;AAAA;;AAAA;AAAA;;AACvD;;;;;;AADuC;;;;QDJlC0C,c;AAOX,8BACmBC,MADnB,EAEmBC,cAFnB,EAGmBC,YAHnB,EAG6C;AAAA;;AAF1B,aAAAF,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AARZ,aAAAC,KAAA,GAAkB,EAAlB;AACA,aAAAC,UAAA,GAAqB,IAArB;AACA,aAAAC,WAAA,GAAsB,GAAtB;AACA,aAAAP,WAAA,GAAuB,KAAvB;AAQL,aAAKG,cAAL,CAAoBK,IAApB;AACA,aAAKH,KAAL,GAAa,KAAKF,cAAL,CAAoBM,cAAjC;AAED;;;;mCAEU,CACV;;;mCAEUrE,C,EAAG;AAAA;;AACZ,cAAM2B,SAAS,GAAG,KAAKmC,MAAL,CAAYQ,IAAZ,CAAiB,wEAAjB,EAAkC;AAClDC,iBAAK,EAAE,OAD2C;AAElD3C,gBAAI,EAAE;AACJO,sBAAQ,EAAEnC,CAAC,CAACwE,OADR;AAEJpC,sBAAQ,EAAEpC,CAAC,CAACyE;AAFR;AAF4C,WAAlC,CAAlB;AAQA9C,mBAAS,CAAC+C,WAAV,GACGC,SADH,CACa,UAAC/C,IAAD,EAAkB;AAC3B,gBAAIA,IAAJ,EAAU;AACRA,kBAAI,CAACW,cAAL,GAAsBX,IAAI,CAACgB,WAAL,GAAmB,KAAI,CAACuB,WAA9C;;AACA,kBAAI,KAAI,CAACD,UAAT,EAAqB;AACnBtC,oBAAI,CAACgD,QAAL,GAAgB,KAAI,CAACV,UAArB;AACAtC,oBAAI,CAACiD,KAAL,GAAa,KAAI,CAACd,cAAL,CAAoBe,eAApB,EAAb;;AACA,qBAAI,CAACf,cAAL,CAAoBgB,MAApB,CAA2BnD,IAA3B,EAAiC,KAAI,CAACsC,UAAtC;AACD,eAJD,MAIO;AACLtC,oBAAI,CAACiD,KAAL,GAAa,KAAI,CAACd,cAAL,CAAoBe,eAApB,EAAb;;AACA,qBAAI,CAACf,cAAL,CAAoBiB,GAApB,CAAwBpD,IAAxB;AACD;AACF;;AACD,iBAAI,CAACqD,YAAL;AACD,WAdH;AAeD;;;sCAEarD,I,EAAW;AACvB,eAAKsC,UAAL,GAAkBtC,IAAI,CAACtB,EAAvB;AACA,eAAKsD,WAAL,GAAmBhC,IAAI,CAACgC,WAAxB;AACD;;;uCAEc;AACb,eAAKA,WAAL,GAAmB,KAAnB;AACA,eAAKM,UAAL,GAAkB,IAAlB;AACD;;;kCAEQ;AACP,eAAKF,YAAL,CAAkBkB,WAAlB,CAA8B,KAAKjB,KAAnC;AACD;;;;;;;uBA3DUJ,c,EAAc,mI,EAAA,gJ,EAAA,4I;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,gU;AAAA;AAAA;ACZ3B;;AAEI;;AAOA;;AACI;;AAAI;;AAAsB;;AAC1B;;AAA0C;AAAA,mBAAS,eAAT;AAAiB,WAAjB;;AAAmB;;AAAc;;AAC3E;;AAA0C;AAAA;AAAA;;AAAmC;;AAAiB;;AAClG;;AAEA;;AACI;;AAEJ;;AAEJ;;;;AAlBS;;AAAA;;AAcW;;AAAA;;;;;;;;;sEDJPA,c,EAAc;cAL1B,uDAK0B;eALhB;AACT5C,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAAA;;AACI;;AAQJ;;;;;;AAFI;;AAAA;;AAJA,mFAAc,IAAd,EAAc,SAAd,EAAc,IAAd,EAAc,SAAd,EAAc,IAAd,EAAc,SAAd;;;;QDISgE,a;AAyCX,+BAAc;AAAA;;AAvCN,aAAAC,GAAA,GAAc,CAAd;AACA,aAAAC,GAAA,GAAc,CAAd;AACA,aAAAC,GAAA,GAAc,CAAd;AACA,aAAAC,GAAA,GAAc,CAAd;AAEC,aAAAV,KAAA,GAAgB,EAAhB;AAkCQ;;;;mCAET,CACP;;;0BAlCMW,I,EAAc;AACnB,eAAKJ,GAAL,GAAWI,IAAI,GAAG,GAAlB;AACD,S;4BACQ;AACP,iBAAO,KAAKJ,GAAZ;AACD;;;0BAGMI,I,EAAc;AACnB,eAAKH,GAAL,GAAWG,IAAI,GAAG,EAAlB;AACD,S;4BACQ;AACP,iBAAO,KAAKH,GAAZ;AACD;;;0BAGMG,I,EAAc;AACnB,eAAKF,GAAL,GAAWE,IAAI,GAAG,GAAlB;AACD,S;4BACQ;AACP,iBAAO,KAAKF,GAAZ;AACD;;;0BAGME,I,EAAc;AACnB,eAAKD,GAAL,GAAWC,IAAI,GAAG,EAAlB;AACD,S;4BACQ;AACP,iBAAO,KAAKD,GAAZ;AACD;;;;;;;uBAvCUJ,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,wC;AAAA;AAAA;ACP1B;;;;AAAK;;;;;;;;;sEDOQA,a,EAAa;cALzB,uDAKyB;eALf;AACTlE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;gBAOvB;;;gBAEA;;;gBAQA;;;gBAQA;;;gBAQA;;;;;;;;;;;;;;;;;;;;AExCH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;QAOasE,Y;AAEX,8BAAc;AAAA;AAAG;;;;oCAEL7D,I,EAAgB;AAE1B,cAAM8D,eAAe,GAAG9D,IAAI,CAAC+D,GAAL,CAAS,UAACzC,MAAD,EAAoB;AACnD,gBAAMJ,QAAQ,GAAG,EAAjB;;AACA,gBAAII,MAAM,CAACJ,QAAP,CAAgB8C,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3C,MAAM,CAACJ,QAAP,CAAgB8C,MAApC,EAA4CC,CAAC,EAA7C,EAAiD;AAC/C/C,wBAAQ,CAACgD,IAAT,CAAc5C,MAAM,CAACJ,QAAP,CAAgB+C,CAAhB,EAAmBnD,IAAjC;AACD;AACF,aAJD,MAIO;AACLI,sBAAQ,CAACgD,IAAT,CAAc,MAAd;AACD;;AACD,mBAAO;AACLpD,kBAAI,EAAEQ,MAAM,CAACR,IADR;AAELE,yBAAW,EAAEM,MAAM,CAACN,WAFf;AAGLmD,wBAAU,EAAE7C,MAAM,CAACX,cAHd;AAILC,iCAAmB,EAAEU,MAAM,CAACV,mBAJvB;AAKLwD,0CAA4B,EAAE9C,MAAM,CAACT,2BALhC;AAMLK,sBAAQ,EAAEA,QAAQ,CAACmD,IAAT,CAAc,IAAd;AANL,aAAP;AAQD,WAjBuB,CAAxB;AAmBA,cAAIC,OAAO,GAAG;AACZC,mBAAO,EAAE,CAAC,MAAD,EAAS,cAAT,EAAyB,aAAzB,EAAwC,kBAAxC,EAA4D,0BAA5D,EAAwF,iBAAxF;AADG,WAAd;AAIA,cAAI,wEAAJ,CAAeT,eAAf,EAAgC,SAAhC,EAA2CQ,OAA3C;AACD;;;;;;;uBA9BUT,Y;AAAY,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVW,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;ACPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,c;AAMX,gCAAc;AAAA;;AAJP,aAAAC,YAAA,GAAyB,EAAzB;AACA,aAAAjC,cAAA,GAA2B,EAA3B;AACA,aAAAkC,cAAA,GAAyB,GAAzB;AAEU;;;;+BAEV;AACL,eAAKD,YAAL,GAAoB,CAClB;AACEnE,oBAAQ,EAAE,GADZ;AAEEC,oBAAQ,EAAE,GAFZ;AAGEC,iBAAK,EAAE,GAHT;AAIEC,iBAAK,EAAE,GAJT;AAKEhC,cAAE,EAAE,CALN;AAMEoC,gBAAI,EAAE,MANR;AAOEE,uBAAW,EAAE,EAPf;AAQEJ,+BAAmB,EAAE,IARvB;AASED,0BAAc,EAAE,IATlB;AAUEE,uCAA2B,EAAE,IAV/B;AAWEoC,iBAAK,EAAE,KAXT;AAYE/B,oBAAQ,EAAE,CACR;AACEX,sBAAQ,EAAE,GADZ;AAEEC,sBAAQ,EAAE,GAFZ;AAGEC,mBAAK,EAAE,GAHT;AAIEC,mBAAK,EAAE,GAJT;AAKEhC,gBAAE,EAAE,CALN;AAMEsE,sBAAQ,EAAE,CANZ;AAOElC,kBAAI,EAAE,MAPR;AAQEE,yBAAW,EAAE,EARf;AASEJ,iCAAmB,EAAE,CATvB;AAUED,4BAAc,EAAE,IAVlB;AAWEE,yCAA2B,EAAE,IAX/B;AAYEoC,mBAAK,EAAE,QAZT;AAaE/B,sBAAQ,EAAE;AAbZ,aADQ,EAgBR;AACEX,sBAAQ,EAAE,GADZ;AAEEC,sBAAQ,EAAE,GAFZ;AAGEC,mBAAK,EAAE,GAHT;AAIEC,mBAAK,EAAE,GAJT;AAKEhC,gBAAE,EAAE,CALN;AAMEsE,sBAAQ,EAAE,CANZ;AAOElC,kBAAI,EAAE,KAPR;AAQEE,yBAAW,EAAE,EARf;AASEJ,iCAAmB,EAAE,IATvB;AAUED,4BAAc,EAAE,IAVlB;AAWEE,yCAA2B,EAAE,IAX/B;AAYEoC,mBAAK,EAAE,MAZT;AAaE/B,sBAAQ,EAAE,CACR;AACEX,wBAAQ,EAAE,GADZ;AAEEC,wBAAQ,EAAE,GAFZ;AAGEC,qBAAK,EAAE,GAHT;AAIEC,qBAAK,EAAE,GAJT;AAKEhC,kBAAE,EAAE,CALN;AAMEsE,wBAAQ,EAAE,CANZ;AAOElC,oBAAI,EAAE,QAPR;AAQEE,2BAAW,EAAE,EARf;AASEJ,mCAAmB,EAAE,CATvB;AAUED,8BAAc,EAAE,IAVlB;AAWEE,2CAA2B,EAAE,IAX/B;AAYEoC,qBAAK,EAAE,OAZT;AAaE/B,wBAAQ,EAAE;AAbZ,eADQ,EAgBR;AACEX,wBAAQ,EAAE,GADZ;AAEEC,wBAAQ,EAAE,GAFZ;AAGEC,qBAAK,EAAE,GAHT;AAIEC,qBAAK,EAAE,GAJT;AAKEhC,kBAAE,EAAE,CALN;AAMEsE,wBAAQ,EAAE,CANZ;AAOElC,oBAAI,EAAE,KAPR;AAQEE,2BAAW,EAAE,EARf;AASEJ,mCAAmB,EAAE,CATvB;AAUED,8BAAc,EAAE,IAVlB;AAWEE,2CAA2B,EAAE,IAX/B;AAYEoC,qBAAK,EAAE,QAZT;AAaE/B,wBAAQ,EAAE;AAbZ,eAhBQ;AAbZ,aAhBQ;AAZZ,WADkB,CAApB;AA8EA,eAAKuB,cAAL,GAAsB,KAAKmC,YAAL,CAAkB,KAAKF,YAAvB,CAAtB;AACD;;;4BAEG1E,I,EAAc;AAChB,eAAKyC,cAAL,CAAoByB,IAApB,CAAyBlE,IAAzB;AACD;;;+BAEMA,I,EAActB,E,EAAY;AAC/B,cAAMmG,KAAK,GAAG,KAAKpC,cAAL,CAAoBqC,SAApB,CAA8B,UAAAjD,CAAC;AAAA,mBAAIA,CAAC,CAACnD,EAAF,KAASA,EAAb;AAAA,WAA/B,CAAd;AACA,eAAK+D,cAAL,CAAoBoC,KAApB,EAA2B3D,QAA3B,CAAoCgD,IAApC,CAAyClE,IAAzC;AACA,eAAKyC,cAAL,CAAoByB,IAApB,CAAyBlE,IAAzB;AACA,eAAK+E,mBAAL,CAAyB/E,IAAzB,EAA+B6E,KAA/B,EAAsC7E,IAAI,CAACW,cAA3C;AACD;;;4CAEmBqE,K,EAAeH,K,EAAeI,U,EAAoB;AACpE,cAAI,CAACD,KAAL,EAAY;AACZ,cAAME,MAAM,GAAG,KAAKzC,cAAL,CAAoBoC,KAApB,CAAf;AACA,cAAMM,cAAc,GAAG/E,IAAI,CAACC,KAAL,CAAY4E,UAAU,GAAG,KAAKN,cAA9B,CAAvB;AACAO,gBAAM,CAACtE,mBAAP,IAA8BuE,cAA9B;AACAD,gBAAM,CAACrE,2BAAP,GAAqCqE,MAAM,CAACvE,cAAP,GAAwBuE,MAAM,CAACtE,mBAApE;AACA,eAAK6B,cAAL,CAAoBoC,KAApB,IAA6BK,MAA7B;;AACA,cAAIA,MAAM,CAAClC,QAAX,EAAqB;AACnB,gBAAMoC,MAAM,GAAG,KAAK3C,cAAL,CAAoBqC,SAApB,CAA8B,UAAAjD,CAAC;AAAA,qBAAIqD,MAAM,CAAClC,QAAP,KAAoBnB,CAAC,CAACnD,EAA1B;AAAA,aAA/B,CAAf;AACA,mBAAO,KAAKqG,mBAAL,CAAyBG,MAAzB,EAAiCE,MAAjC,EAAyCD,cAAzC,CAAP;AACD,WAHD,MAGO,OAAO,KAAKJ,mBAAL,CAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAP;AACR;;;qCAEYM,K,EAAiB;AAAA;;AAC5B,cAAIC,MAAM,GAAG,EAAb;AACAD,eAAK,CAACE,OAAN,CAAc,UAACjE,MAAD,EAAoB;AAChCgE,kBAAM,CAACpB,IAAP,CAAY5C,MAAZ;;AACA,gBAAIkE,KAAK,CAACC,OAAN,CAAcnE,MAAM,CAACJ,QAArB,CAAJ,EAAoC;AAClCoE,oBAAM,GAAGA,MAAM,CAACI,MAAP,CAAc,MAAI,CAACd,YAAL,CAAkBtD,MAAM,CAACJ,QAAzB,CAAd,CAAT;AACD;AACF,WALD;AAMA,iBAAOoE,MAAP;AACD;;;0CAEiB;AAChB,cAAIrC,KAAK,GAAG,EAAZ;;AACA,iBAAOA,KAAK,CAACe,MAAN,GAAe,CAAtB,EAAyB;AACvBf,iBAAK,IAAK7C,IAAI,CAACE,MAAL,EAAD,CAAgBqF,QAAhB,CAAyB,EAAzB,EAA6BC,MAA7B,CAAoC,CAAC,CAArC,EAAwCA,MAAxC,CAA+C,CAAC,CAAhD,CAAT;AACD;;AACD,iBAAO,MAAM3C,KAAb;AACD;;;;;;;uBAnIUwB,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVD,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;ACN3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMqB,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IndexComponent } from './components/index/index.component';\n\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'index' },\n  { path: 'index', component: IndexComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'hireme';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DialogComponent } from './components/dialog/dialog.component';\nimport { FriendComponent } from './components/friend/friend.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { LineComponent } from './components/line/line.component';\n\nconst angularMaterialModules = [\n  DragDropModule,\n  MatButtonModule,\n  MatIconModule,\n  MatDialogModule,\n  MatInputModule\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IndexComponent,\n    DialogComponent,\n    FriendComponent,\n    LineComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    angularMaterialModules\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [DialogComponent, FriendComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n\n  public form: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private readonly fb: FormBuilder\n  ) {\n    this.form = this.fb.group({\n      id: Math.floor(Math.random() * (10000 - 1) + 1),\n      initialX: data.initialX,\n      initialY: data.initialY,\n      lineX: data.initialX,\n      lineY: data.initialY,\n      totalFromSales: 0,\n      totalFromCommission: 0,\n      totalFromSalesPlusComission: 0,\n      name: ['', Validators.required],\n      ticketsSold: ['', [Validators.required, Validators.pattern('^\\\\d+$')]],\n      children: [[]]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  continue() {\n    this.dialogRef.close(this.form.value);\n  }\n\n}\n","<div mat-dialog-content>\n    <form [formGroup]=\"form\">\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Friend's Name</mat-label>\n            <input matInput placeholder=\"John\" formControlName=\"name\">\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Tickets Sold</mat-label>\n            <input matInput type=\"number\" placeholder=\"20\" formControlName=\"ticketsSold\">\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions>\n    <button \n    [disabled]=\"!form.valid\"\n    mat-raised-button color=\"primary\" \n    (click)=\"continue()\">Add</button>\n</div>","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Friend } from 'src/app/models/Friend.model';\nimport { CdkDragMove } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-friend',\n  templateUrl: './friend.component.html',\n  styleUrls: ['./friend.component.scss']\n})\nexport class FriendComponent {\n  @Input() friend: Friend = null;\n  @Output() idEmitter = new EventEmitter<{ id: number, showOverlay: boolean }>();\n\n  constructor() { }\n\n  handleDrag(e: CdkDragMove) {\n    const element = e.source.getRootElement();\n    const newPos = element.getBoundingClientRect();\n    this.friend.lineX = newPos.x;\n    this.friend.lineY = newPos.y;\n  }\n\n  emitId() {\n    this.idEmitter.emit({ id: this.friend.id, showOverlay: true });\n  }\n\n}\n","<div *ngIf=\"friend\" class=\"container\">\n    <div class=\"example-box\" cdkDragBoundary=\"body\" cdkDrag (cdkDragMoved)=\"handleDrag($event)\"\n        [style.left.px]=\"friend.initialX\" [style.top.px]=\"friend.initialY - 114\">\n        <span (click)=\"emitId()\" class=\"material-icons\">add</span>\n        <div class=\"friend-info\">\n            <p><span>Name: </span>{{friend.name}}</p>\n            <p><span>Tickets Sold: </span>{{friend.ticketsSold}}</p>\n            <p><span>Total Sales: </span>{{friend.totalFromSales}}</p>\n            <p><span>Total Commission: </span>{{friend.totalFromCommission}}</p>\n            <p><span>Total Sales + Commission: </span>{{friend.totalFromSalesPlusComission}}</p>\n        </div>\n    </div>\n\n    <ng-container *ngIf=\"friend.children.length > 0\">\n        <div class=\"line-container\" *ngFor=\"let child of friend.children\">\n            <app-line [x1]=\"friend.lineX\" [y1]=\"friend.lineY\" [x2]=\"child.lineX\" [y2]=\"child.lineY\"\n                [color]=\"friend.color\">\n            </app-line>\n        </div>\n    </ng-container>\n</div>","import { Component, OnInit, } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { Friend } from 'src/app/models/Friend.model';\nimport { FriendsService } from 'src/app/services/friends.service';\nimport { FilesService } from 'src/app/services/files.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent implements OnInit {\n\n  public items: Friend[] = [];\n  public selectedId: number = null;\n  public ticketPrice: number = 100;\n  public showOverlay: boolean = false;\n\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly friendsService: FriendsService,\n    private readonly filesService: FilesService\n  ) {\n\n    this.friendsService.init();\n    this.items = this.friendsService.flattenedItems;\n\n  }\n\n  ngOnInit() {\n  }\n\n  openDialog(e) {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: '250px',\n      data: {\n        initialX: e.offsetX,\n        initialY: e.offsetY,\n      }\n    });\n\n    dialogRef.afterClosed()\n      .subscribe((data: Friend) => {\n        if (data) {\n          data.totalFromSales = data.ticketsSold * this.ticketPrice;\n          if (this.selectedId) {\n            data.fatherId = this.selectedId;\n            data.color = this.friendsService.makeRandomColor();\n            this.friendsService.update(data, this.selectedId);\n          } else {\n            data.color = this.friendsService.makeRandomColor();\n            this.friendsService.add(data);\n          }\n        }\n        this.closeOverlay();\n      });\n  }\n\n  getSelectedId(data: any) {\n    this.selectedId = data.id;\n    this.showOverlay = data.showOverlay;\n  }\n\n  closeOverlay() {\n    this.showOverlay = false;\n    this.selectedId = null;\n  }\n\n  export() {\n    this.filesService.exportToCSV(this.items);\n  }\n\n}","<div class=\"index-page\">\n\n    <div *ngIf=\"showOverlay\" class=\"overlay\" (click)=\"openDialog($event)\">\n        <span class=\"material-icons\" (click)=\"closeOverlay()\">\n            cancel\n        </span>\n        <h1>Click somewhere to place a new friend</h1>\n    </div>\n\n    <div class=\"header\">\n        <h1>Bring A Friend Diagram</h1>\n        <button mat-raised-button color=\"primary\" (click)=\"export()\">Export Diagram</button>\n        <button mat-raised-button color=\"primary\" (click)=\"showOverlay=!showOverlay\">Add A New Friend!</button>\n    </div>\n\n    <div class=\"friends-container\">\n        <app-friend *ngFor=\"let item of items\" [friend]=\"item\" (idEmitter)=\"getSelectedId($event)\">\n        </app-friend>\n    </div>\n\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-line',\n  templateUrl: './line.component.html',\n  styleUrls: ['./line.component.scss']\n})\nexport class LineComponent implements OnInit {\n\n  private _x1: number = 0;\n  private _y1: number = 0;\n  private _x2: number = 0;\n  private _y2: number = 0;\n\n  @Input() color: string = '';\n\n  @Input()\n  set x1(cord: number) {\n    this._x1 = cord + 125;\n  }\n  get x1() {\n    return this._x1;\n  }\n\n  @Input()\n  set y1(cord: number) {\n    this._y1 = cord + 75;\n  }\n  get y1() {\n    return this._y1;\n  }\n\n  @Input()\n  set x2(cord: number) {\n    this._x2 = cord + 125;\n  }\n  get x2() {\n    return this._x2;\n  }\n\n  @Input()\n  set y2(cord: number) {\n    this._y2 = cord + 75;\n  }\n  get y2() {\n    return this._y2;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg *ngIf=\"x1 && y1 && x2 && y2 && color\">\n    <line \n    class=\"line\" \n    [attr.x1]=\"x1\"\n    [attr.y1]=\"y1\"\n    [attr.x2]=\"x2\"\n    [attr.y2]=\"y2\"\n    [style.stroke]=\"color\"\n     />\n</svg>","import { Injectable } from '@angular/core';\nimport { AngularCsv } from 'angular7-csv/dist/Angular-csv';\nimport { Friend } from '../models/Friend.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  constructor() { }\n\n  exportToCSV(data: Friend[]) {\n\n    const transformedData = data.map((friend: Friend) => {\n      const children = [];\n      if (friend.children.length > 0) {\n        for (let i = 0; i < friend.children.length; i++) {\n          children.push(friend.children[i].name);\n        }\n      } else {\n        children.push('None');\n      }\n      return {\n        name: friend.name,\n        ticketsSold: friend.ticketsSold,\n        totalSales: friend.totalFromSales,\n        totalFromCommission: friend.totalFromCommission,\n        totalFromSalesPlusCommission: friend.totalFromSalesPlusComission,\n        children: children.join(', ')\n      };\n    });\n\n    var options = {\n      headers: [\"Name\", \"Tickets Sold\", \"Total Sales\", \"Total Commission\", \"Total Sales + Commission\", \"Friends Brought\"]\n    };\n\n    new AngularCsv(transformedData, 'Diagram', options);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Friend } from '../models/Friend.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FriendsService {\n\n  public initialState: Friend[] = [];\n  public flattenedItems: Friend[] = [];\n  public commissionRate: number = 0.2;\n\n  constructor() { }\n\n  init() {\n    this.initialState = [\n      {\n        initialX: 250,\n        initialY: 130,\n        lineX: 250,\n        lineY: 130,\n        id: 1,\n        name: \"John\",\n        ticketsSold: 50,\n        totalFromCommission: 1360,\n        totalFromSales: 5000,\n        totalFromSalesPlusComission: 6360,\n        color: 'red',\n        children: [\n          {\n            initialX: 600,\n            initialY: 130,\n            lineX: 600,\n            lineY: 130,\n            id: 2,\n            fatherId: 1,\n            name: \"Alon\",\n            ticketsSold: 30,\n            totalFromCommission: 0,\n            totalFromSales: 3000,\n            totalFromSalesPlusComission: 3000,\n            color: 'purple',\n            children: []\n          },\n          {\n            initialX: 600,\n            initialY: 300,\n            lineX: 600,\n            lineY: 300,\n            id: 3,\n            fatherId: 1,\n            name: \"Tal\",\n            ticketsSold: 20,\n            totalFromCommission: 1800,\n            totalFromSales: 2000,\n            totalFromSalesPlusComission: 3800,\n            color: 'blue',\n            children: [\n              {\n                initialX: 900,\n                initialY: 130,\n                lineX: 900,\n                lineY: 130,\n                id: 4,\n                fatherId: 3,\n                name: \"Shalom\",\n                ticketsSold: 40,\n                totalFromCommission: 0,\n                totalFromSales: 4000,\n                totalFromSalesPlusComission: 4000,\n                color: 'black',\n                children: []\n              },\n              {\n                initialX: 900,\n                initialY: 300,\n                lineX: 900,\n                lineY: 300,\n                id: 5,\n                fatherId: 3,\n                name: \"Adi\",\n                ticketsSold: 50,\n                totalFromCommission: 0,\n                totalFromSales: 5000,\n                totalFromSalesPlusComission: 5000,\n                color: 'orange',\n                children: []\n              }\n            ]\n          }\n        ]\n      }\n    ]\n    this.flattenedItems = this.flattenArray(this.initialState);\n  }\n\n  add(data: Friend) {\n    this.flattenedItems.push(data);\n  }\n\n  update(data: Friend, id: number) {\n    const index = this.flattenedItems.findIndex(x => x.id === id);\n    this.flattenedItems[index].children.push(data);\n    this.flattenedItems.push(data);\n    this.calculateCommission(data, index, data.totalFromSales);\n  }\n\n  calculateCommission(child: Friend, index: number, commission: number) {\n    if (!child) return;\n    const father = this.flattenedItems[index];\n    const moneyFromChild = Math.floor((commission * this.commissionRate))\n    father.totalFromCommission += moneyFromChild;\n    father.totalFromSalesPlusComission = father.totalFromSales + father.totalFromCommission;\n    this.flattenedItems[index] = father;\n    if (father.fatherId) {\n      const nextId = this.flattenedItems.findIndex(x => father.fatherId === x.id);\n      return this.calculateCommission(father, nextId, moneyFromChild);\n    } else return this.calculateCommission(null, null, null);\n  }\n\n  flattenArray(array: Friend[]) {\n    let result = [];\n    array.forEach((friend: Friend) => {\n      result.push(friend);\n      if (Array.isArray(friend.children)) {\n        result = result.concat(this.flattenArray(friend.children));\n      }\n    });\n    return result;\n  }\n\n  makeRandomColor() {\n    let color = '';\n    while (color.length < 6) {\n      color += (Math.random()).toString(16).substr(-6).substr(-1)\n    }\n    return '#' + color;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}